{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","hooks/useFetchGifs.js","components/GifListItem.js","components/GifList.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","handleAdd","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","className","type","value","name","placeholder","onChange","target","getGifs","search","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","useFetchGifs","categoria","loading","state","setState","useEffect","then","GifListItem","src","alt","GifList","gif","GifExpertApp","defaultCategorias","categorias","setCategorias","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAjCK,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,uBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACwB,KAAtBJ,EAAWK,SAGfP,EAAUE,GACVC,EAAc,MAId,UACE,mBAAGK,UAAU,OAAb,SAAqBN,IACrB,uBACEO,KAAK,OACLC,MAAOR,EACPS,KAAK,WACLC,YAAY,eACZC,SArBe,SAACR,GACpBF,EAAcE,EAAES,OAAOJ,c,uBCNdK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,mGACmFF,GADnF,SAEFG,MAAMD,GAFJ,cAEfE,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAGtCY,QAAQC,IAAIR,GAXS,kBAYdA,GAZc,4CAAH,sDCqBLS,EAlBM,SAACC,GACpB,MAA0BhC,mBAAS,CACjCqB,KAAM,GACNY,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OARAC,qBACE,WACEtB,EAAQkB,GAAWK,MAAK,SAAAhB,GAAI,OAAIc,EAAS,CAAEd,KAAMA,EAAMY,SAAS,SAGlE,CAACD,IAGIE,GCAMI,EAdK,SAAC,GAAkB,IAAjBZ,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAC3B,OACE,sBAAKV,UAAU,6CAAf,UACE,qBAAKgC,IAAKtB,EAAKuB,IAAKd,EAAOA,MAAOA,IAClC,4BAAIA,QCHGe,EAAU,SAAC,GAAmB,IAAjBT,EAAgB,EAAhBA,UACxB,EAA0BD,EAAaC,GAA/BX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,QAEd,OACE,sBAAK1B,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4ByB,IAC3BC,GACC,mBAAGR,GAAG,cAAclB,UAAU,mCAA9B,wBAEDc,EAAKE,KAAI,SAACmB,GAAD,OACR,cAAC,EAAD,CAA0BhB,MAAOgB,EAAIhB,MAAOT,IAAKyB,EAAIzB,KAAnCyB,EAAIjB,WCXjBkB,EAAe,SAAC,GAA8B,IAAD,IAA5BC,yBAA4B,MAAR,GAAQ,EACxD,EAAoC5C,mBAAS4C,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAMA,OACE,gCACE,8CACA,uBAEA,cAAC,EAAD,CAAa/C,UATC,SAACgD,GACjBD,EAAc,CAACC,GAAF,mBAAUF,QAUrB,6BACGA,EAAWtB,KAAI,SAACS,GAAD,OACd,cAAC,EAAD,CAASA,UAAWA,GAAgBA,Y,MCf9CgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.644df2cb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({handleAdd}) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim() === \"\") {\r\n      return;\r\n    }\r\n    handleAdd(inputValue);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <p className=\"hide\">{inputValue}</p>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        name=\"category\"\r\n        placeholder=\"Add category\"\r\n        onChange={handleChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  handleAdd: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (search) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=10&api_key=v231QN1p88WN9enc87J0b1yodQ6QodTc&q=${search}`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  console.log(gifs);\r\n  return gifs;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/GetGifs\";\r\n\r\nconst useFetchGifs = (categoria) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  //Para que se repita una unica vez\r\n  useEffect(\r\n    () => {\r\n      getGifs(categoria).then(data => setState({ data: data, loading: false }));\r\n    },\r\n    // lo ponemos asÃ­ para que solo recargue cuando se modifique la categoria\r\n    [categoria]\r\n  );\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchGifs;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst GifListItem = ({title, url}) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounceInUp\">\r\n      <img src={url} alt={title} title={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nGifListItem.propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GifListItem;","import React from \"react\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport GifListItem from \"./GifListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const GifList = ({ categoria }) => {\r\n  const { data, loading } = useFetchGifs(categoria);\r\n\r\n  return (\r\n    <div className=\"card-grid\">\r\n      <h3 className=\"titulo-cat\">{categoria}</h3>\r\n      {loading && (\r\n        <p id=\"loadingText\" className=\"animate__animated animate__flash\">Loading...</p>\r\n      )}\r\n      {data.map((gif) => (\r\n        <GifListItem key={gif.id} title={gif.title} url={gif.url} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nGifList.propTypes = {\r\n  categoria: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport  AddCategory  from \"./AddCategory\";\r\nimport { GifList } from \"./GifList\";\r\n\r\nexport const GifExpertApp = ({defaultCategorias = []}) => {\r\n  const [categorias, setCategorias] = useState(defaultCategorias);\r\n\r\n  const handleAdd = (cat) => {\r\n    setCategorias([cat, ...categorias]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>GifExpertApp</h2>\r\n      <hr />\r\n\r\n      <AddCategory handleAdd={handleAdd}/>\r\n\r\n      <ol>\r\n        {categorias.map((categoria) => (\r\n          <GifList categoria={categoria} key={categoria} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}